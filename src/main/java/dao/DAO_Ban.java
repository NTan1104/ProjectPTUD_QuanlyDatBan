package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import connectDatabase.BaseDAO;
import entity.Ban;

public class DAO_Ban extends BaseDAO {
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    List<Ban> list = new ArrayList<Ban>();

    public List<Ban> getAllBansinTang1() {
        List<Ban> list = new ArrayList<Ban>(); 
        String sql = "SELECT * FROM Ban WHERE Tang = 1";
        try {
            conn = new BaseDAO().getConnection();
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            while (rs.next()) {
                list.add(new Ban(rs.getString(1), rs.getString(2), rs.getInt(3), rs.getInt(4), rs.getString(5), rs.getString(6)));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            closeResources(); // ƒê√≥ng t√†i nguy√™n
        }
        return list;
    }

    // Ph∆∞∆°ng th·ª©c c·∫≠p nh·∫≠t tr·∫°ng th√°i b√†n
    public boolean capNhatTrangThaiBan(String tenBan, String trangThai) {
        // Ki·ªÉm tra tr·∫°ng th√°i h·ª£p l·ªá
        if (!isValidTrangThai(trangThai)) {
            System.out.println("Tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá!");
            return false;
        }

        // L·∫•y maBan t·ª´ tenBan
        String maBan = getMaBanByTenBan(tenBan);
        if (maBan == null) {
            System.out.println("S·ªë b√†n kh√¥ng t·ªìn t·∫°i!");
            return false;
        }

        String sqlUpdate = "UPDATE Ban SET TrangThai = ? WHERE MaBan = ?";
        boolean result = false;

        try {
            conn = new BaseDAO().getConnection();
            ps = conn.prepareStatement(sqlUpdate);
            ps.setString(1, trangThai);
            ps.setString(2, maBan);

            int rowsAffected = ps.executeUpdate();
            result = rowsAffected > 0;
            if (result) {
                System.out.println("C·∫≠p nh·∫≠t tr·∫°ng th√°i b√†n th√†nh c√¥ng!");
            } else {
                System.out.println("C·∫≠p nh·∫≠t tr·∫°ng th√°i b√†n th·∫•t b·∫°i!");
            }
        } catch (Exception e) {
            System.out.println("L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i b√†n: " + e.getMessage());
        } finally {
            closeResources();
        }

        return result;
    }

    private boolean isValidTrangThai(String trangThai) {
        return trangThai != null && (
            trangThai.equals("C√íN TR·ªêNG") ||
            trangThai.equals("ƒê√É ƒê·∫∂T") ||
            trangThai.equals("ƒêANG S·ª¨ D·ª§NG") ||
            trangThai.equals("B·∫¢O TR√å")
        );
    }
    public String getMaBanByTenBan(String tenBan) {
        String sql = "SELECT MaBan FROM Ban WHERE TenBan = ?";
        String maBan = null;
        try {
            conn = new BaseDAO().getConnection();
            ps = conn.prepareStatement(sql);
            ps.setString(1, tenBan);
            rs = ps.executeQuery();
            if (rs.next()) {
                maBan = rs.getString("MaBan");
            }
        } catch (Exception e) {
            System.out.println("L·ªói khi l·∫•y maBan t·ª´ tenBan: " + e.getMessage());
        } finally {
            closeResources();
        }
        return maBan;
    }
    public Ban getBanbyTenBan(String tenBan) {
        String sql = "SELECT * FROM Ban WHERE TenBan = ?";
        try {
            conn = new BaseDAO().getConnection();
            ps = conn.prepareStatement(sql);
            ps.setString(1, tenBan);
            rs = ps.executeQuery();
            if (rs.next()) {
                return new Ban(rs.getString(1),
                		rs.getString(2),
                		rs.getInt(3),
                		rs.getInt(4),
                		rs.getString(5),
                		rs.getString(6));
            }
        } catch (Exception e) {
            System.out.println("L·ªói khi l·∫•y maBan t·ª´ tenBan: " + e.getMessage());
        } finally {
            closeResources();
        }
        return null;
    }
    private void closeResources() {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (conn != null) conn.close();
        } catch (Exception e) {
            System.out.println("L·ªói khi ƒë√≥ng t√†i nguy√™n: " + e.getMessage());
        }
    }
    public List<Ban> getBanTrong() {
        List<Ban> banTrongList = new ArrayList<>();
        String sql = "SELECT * FROM Ban WHERE TrangThai = ?";
        try (Connection conn = new BaseDAO().getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, "C√íN TR·ªêNG");  // üëà G√°n tham s·ªë

            try (ResultSet rs = ps.executeQuery()) {
                while (rs.next()) {
                    Ban ban = new Ban();
                    ban.setMaBan(rs.getString("MaBan"));
                    ban.setTenBan(rs.getString("TenBan"));
                    ban.setTrangThai(rs.getString("TrangThai"));
                    banTrongList.add(ban);
                    System.out.println("B√†n tr·ªëng t·∫ßng 1: " + ban.getTenBan() + " - Tr·∫°ng th√°i: " + ban.getTrangThai());
                }
            }

            if (banTrongList.isEmpty()) {
                System.out.println("Kh√¥ng t√¨m th·∫•y b√†n tr·ªëng ·ªü t·∫ßng 1!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        return banTrongList;
    }

}